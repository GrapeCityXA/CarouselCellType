<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BindingImageEditor_ImageBindingSettings" xml:space="preserve">
    <value>Image Binding Settings</value>
  </data>
  <data name="BindingImagesEditor_CaptionColumnLabel" xml:space="preserve">
    <value>CaptionColumn:</value>
  </data>
  <data name="BindingImagesEditor_DescriptionColumnLabel" xml:space="preserve">
    <value>DescriptionColumn:</value>
  </data>
  <data name="BindingImagesEditor_ImageColumnCantBeEmpty" xml:space="preserve">
    <value>The image column can't be empty.</value>
  </data>
  <data name="BindingImagesEditor_ImageColumnLabel" xml:space="preserve">
    <value>ImageColumn:</value>
  </data>
  <data name="BindingImagesEditor_SelectTableLabel" xml:space="preserve">
    <value>SelectTable:</value>
  </data>
  <data name="BindingImagesEditor_TableNameCantBeEmpty" xml:space="preserve">
    <value>The table name can't be empty.</value>
  </data>
  <data name="CarouselCellType_AutoSlide" xml:space="preserve">
    <value>Auto Slide</value>
  </data>
  <data name="CarouselCellType_DefaultImageName" xml:space="preserve">
    <value>Image{0}</value>
  </data>
  <data name="CarouselCellType_DisplayName" xml:space="preserve">
    <value>Carousel</value>
  </data>
  <data name="CarouselCellType_EditCommands" xml:space="preserve">
    <value>Edit Commands...</value>
  </data>
  <data name="CarouselCellType_EditImageInfos" xml:space="preserve">
    <value>Edit Image Infos...</value>
  </data>
  <data name="CarouselCellType_ImageInfoSettings" xml:space="preserve">
    <value>ImageInfo Settings</value>
  </data>
  <data name="CarouselCellType_Interval" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="CarouselCellType_IntervalDescription" xml:space="preserve">
    <value>Specifies the delay (in seconds) between each slide.</value>
  </data>
  <data name="CarouselCellType_IsBinding" xml:space="preserve">
    <value>IsBinding</value>
  </data>
  <data name="CarouselCellType_Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="CarouselCellType_PauseWhenHover" xml:space="preserve">
    <value>PauseWhenHover</value>
  </data>
  <data name="CarouselCellType_PauseWhenHoverDescription" xml:space="preserve">
    <value>Pauses the carousel from going through the next slide when the mouse pointer enters the carousel, and resumes the sliding when the mouse pointer leaves the carousel.</value>
  </data>
  <data name="CarouselCellType_ShowDescriptionText" xml:space="preserve">
    <value>Show caption and description</value>
  </data>
  <data name="CarouselCellType_ShowIndicators" xml:space="preserve">
    <value>ShowIndicators</value>
  </data>
  <data name="CarouselCellType_ShowLeftRightControls" xml:space="preserve">
    <value>ShowLeftRightControls</value>
  </data>
  <data name="CarouselCellType_Wrap" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="CarouselCellType_WrapDescription" xml:space="preserve">
    <value>Specifies whether the carousel should go through all slides continuously, or stop at the last slide.</value>
  </data>
  <data name="ImagesEditor_AddImageToolTip" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ImagesEditor_CaptionLabel" xml:space="preserve">
    <value>Caption:</value>
  </data>
  <data name="ImagesEditor_CommandsSettings" xml:space="preserve">
    <value>Commands Settings</value>
  </data>
  <data name="ImagesEditor_DeleteImageToolTip" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ImagesEditor_DescriptionLabel" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="ImagesEditor_DownImageToolTip" xml:space="preserve">
    <value>Move Down</value>
  </data>
  <data name="ImagesEditor_EditCommands" xml:space="preserve">
    <value>Edit Commands...</value>
  </data>
  <data name="ImagesEditor_EditCommandsToolTip" xml:space="preserve">
    <value>There will trigger command when you click image.</value>
  </data>
  <data name="ImagesEditor_ImagePathLabel" xml:space="preserve">
    <value>Image Path:</value>
  </data>
  <data name="ImagesEditor_PropertiesSettings" xml:space="preserve">
    <value>Properties Settings</value>
  </data>
  <data name="ImagesEditor_SelectImage" xml:space="preserve">
    <value>Select Image...</value>
  </data>
  <data name="ImagesEditor_UpImageToolTip" xml:space="preserve">
    <value>Move Up</value>
  </data>
  <data name="MainWindow_CancelButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MainWindow_OKButtonText" xml:space="preserve">
    <value>OK</value>
  </data>
</root>